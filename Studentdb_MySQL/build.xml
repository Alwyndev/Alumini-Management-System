<?xml version="1.0" encoding="UTF-8"?>
<!-- You may freely edit this file. See commented blocks below for -->
<!-- some examples of how to customize the build. -->
<!-- (If you delete it and reopen the project it will be recreated.) -->
<!-- By default, only the Clean and Build commands use this build script. -->
<!-- Commands such as Run, Debug, and Test only use this build script if -->
<!-- the Compile on Save feature is turned off for the project. -->
<!-- You can turn off the Compile on Save (or Deploy on Save) setting -->
<!-- in the project's Project Properties dialog box.-->
<!-- This build script includes customization for adding required JARs (jcalendar_1.0.0.jar, swing-layout-1.0.3.jar) -->

<project name="Studentdb_MySQL" default="default" basedir=".">
    <description>Builds, tests, and runs the project Studentdb_MySQL.</description>
    <import file="nbproject/build-impl.xml"/>
    
    <!--
    There exist several targets which are by default empty and which can be 
    used for execution of your tasks. These targets are usually executed 
    before and after some main targets. They are: 

      -pre-init:                 called before initialization of project properties
      -post-init:                called after initialization of project properties
      -pre-compile:              called before javac compilation
      -post-compile:             called after javac compilation
      -pre-compile-single:       called before javac compilation of single file
      -post-compile-single:      called after javac compilation of single file
      -pre-compile-test:         called before javac compilation of JUnit tests
      -post-compile-test:        called after javac compilation of JUnit tests
      -pre-compile-test-single:  called before javac compilation of single JUnit test
      -post-compile-test-single: called after javac compilation of single JUunit test
      -pre-jar:                  called before JAR building
      -post-jar:                 called after JAR building
      -post-clean:               called after cleaning build products

    (Targets beginning with '-' are not intended to be called on their own.)

    Example of inserting an obfuscator after compilation could look like this:

        <target name="-post-compile">
            <obfuscate>
                <fileset dir="${build.classes.dir}"/>
            </obfuscate>
        </target>

    For list of available properties check the imported 
    nbproject/build-impl.xml file.  --> 
    
    <!-- Add custom libraries to the classpath -->
    <target name="-init" description="Initialize custom libraries">
        <path id="compile.classpath">
            <fileset dir="lib">
                <include name="*.jar"/>
            </fileset>
            <!-- Adding the JCalendar jar -->
            <fileset dir="C:/Users/alwyn/Downloads">
                <include name="jcalendar_1.0.0.jar"/>
            </fileset>
            <!-- Adding the Swing Layout jar -->
            <fileset dir="C:/Program Files/NetBeans-23/netbeans/platform/modules/ext">
                <include name="swing-layout-1.0.3.jar"/>
            </fileset>
        </path>
    </target>

    <!-- Create the build/classes directory if it doesn't exist -->
    <target name="create-build-dir">
        <mkdir dir="build/classes"/>
    </target>

    <!-- Target to compile the code -->
    <target name="compile" depends="-init, create-build-dir">
        <javac srcdir="src" destdir="build/classes" classpathref="compile.classpath"/>
    </target>

    <!-- Target to run the project -->
    <target name="run" depends="compile">
        <java classname="Studentdb_MySQL" classpathref="compile.classpath" fork="true"/>
    </target>

    <!-- Default target for clean and build -->
    <target name="default" depends="clean, compile, run"/>

    <!-- Clean target to clean the build -->
    <target name="clean">
        <delete dir="build"/>
    </target>

</project>